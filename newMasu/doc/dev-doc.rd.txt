MASUZ 開発者情報
=================================



完全修飾名
---------------------------------

### 完全修飾名が必要なもの
* クラス
    * 通常クラス
    * 内部クラス
    * 匿名クラス
* メソッド
* フィールド


### 完全修飾名の付け方


#### 通常クラス，内部クラス
ITypeBinding.getQualifiedName()で取得  

<full-qualified-class-name>  
sample : java.lang.String

#### 匿名クラス
定義されているクラスのfullQualifiedName + ( メソッド名 ) +  "." + ID  
IDは登場順の番号

sample: 1個目はフィールド

sdl.ist.Hoge.1
sdl.ist.Hoge#Hoge.2
sdl.ist.Hoge#Hoge.2#toku.3
sdl.ist.Hoge#Hoge.2#toku.3#toku.4
sdl.ist.Hoge#Hoge.2#toku.3#toku.4#toku.5
sdl.ist.Hoge#Hoge.6
sdl.ist.Hoge#Fugaaa.7
sdl.ist.Hoge#Fugaaa.8


#### メソッド
* <full-qualified-class-name>
ITypeBinding erasure = binding.getDeclaringClass().getErasure();
String typeName = erasure.getQualifiedName();

* <method-name>
IMethodBinding.getName()

* <type>
ITypeBinding[] params = binding.getParameterTypes();
if (params.length > 0) {
	buf.append(params[0].getErasure().getQualifiedName());
	for (int i = 1; i < params.length; i++) {
		buf.append(',');
		buf.append(params[i].getErasure().getQualifiedName());
	}
}


<full-qualified-class-name> "#" <method-name> "(" ( <type> (* "," <type> )* )? ")"  

sample : java.lang.String#equals(java.lang.String)


#### フィールド

<full-qualified-class-name> "$" <field-name>

フィールドの親クラスをたどって取得．クラスのbindingを解決し，クラスと同様に処理．

sample : sdl.ist.osaka.u.Hoge$hog





	/**
	 * 呼び出し対象のメソッドを一意に特定するキーを生成する <class-name> "#" <method-name> "(" ( <type> (
	 * "," <type> )* )? ")"
	 */
	private String getFullQualifiedNameFromBinding(IMethodBinding binding) {
		StringBuilder buf = new StringBuilder();
		// メソッドを宣言する型を文字列へ変換して追加
		ITypeBinding erasure = binding.getDeclaringClass().getErasure();
		String typeName = erasure.getQualifiedName();
		buf.append(typeName);
		// 型とメソッド名の区切り文字を追加 ("#")
		buf.append('#');
		// メソッド名を追加
		buf.append(binding.getName());
		// メソッド名と引数一覧の区切り文字を追加 ("(")
		buf.append('(');
		// 引数の型一覧を追加
		ITypeBinding[] params = binding.getParameterTypes();
		if (params.length > 0) {
			buf.append(params[0].getErasure().getQualifiedName());
			for (int i = 1; i < params.length; i++) {
				buf.append(',');
				buf.append(params[i].getErasure().getQualifiedName());
			}
		}
		buf.append(')');

		return buf.toString();
	}